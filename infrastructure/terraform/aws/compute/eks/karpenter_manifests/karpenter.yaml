---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: karpenter-provider
spec:
  ttlSecondsAfterEmpty: 60 # scale down nodes after 60 seconds without workloads (excluding daemons)
  ttlSecondsUntilExpired: 604800 # expire nodes after 7 days (in seconds) = 7 * 60 * 60 * 24
  labels: 
    system: "eks"
    environment: "prod"
    nodepool: "eks-spot"
  limits:
    resources:
      cpu: 10
      memory: 32Gi
  requirements:
    - key: node.kubernetes.io/instance-type
      operator: In
      values: ["t3.small", "t3.medium", "t3.large", "t3.xlarge", "t4g.small", "t4g.medium", "t4g.large", "t4g.xlarge", "t3.2xlarge", "t3a.small", "t3a.medium", "t3a.large", "t3a.xlarge", "t2.small", "t2.medium", "t2.large", "t2.xlarge", "m7a.medium", "m4.large", "m7a.large", "m7a.xlarge", "m5a.large", "m5a.xlarge", "m5.large", "m5.xlarge", "m5d.large", "m5d.xlarge", "c5.large", "c5.xlarge", "m4.xlarge", "c5d.large", "m5n.large", "m5n.xlarge", "m5zn.large", "m5zn.xlarge", "c5d.xlarge", "c5n.2xlarge", "c5a.large", "c5a.xlarge", "c5a.2xlarge", "c5a.4xlarge", "m7g.medium", "m7g.large", "m7g.xlarge", "m7g.2xlarge", "m7i.large", "m7i.xlarge", "m7i.2xlarge", "m7i-flex.large", "m7i-flex.xlarge", "m6g.medium", "m6g.large", "m6g.xlarge", "m6i.large", "m6i.xlarge", "m6in.large", "m6in.xlarge", "m6a.large", "m6a.xlarge", "c7g.medium", "c7g.large", "c7g.xlarge" , "c7g.2xlarge", "c7gn.medium", "c7gn.large", "c7gn.xlarge", "c7gn.2xlarge", "c7i.large", "c7i.xlarge", "c7i.2xlarge", "c7a.medium", "c7a.large", "c7a.xlarge", "c6g.medium", "c6g.large", "c6g.xlarge", "c6gn.large", "c6gn.xlarge", "c6i.large", "c6i.xlarge", "c6i.2xlarge", "c6in.large", "c6in.xlarge", "c6in.2xlarge", "c6a.large", "c6a.xlarge", "c6a.2xlarge", "c5n.large", "c5n.xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "r6g.medium", "r7g.medium", "r6g.large", "Im4gn.large", "Is4gen.medium"]
    - key: "topology.kubernetes.io/zone"
      operator: In
      values: ["us-east-1a", "us-east-1b", "us-east-1c"]
    - key: "karpenter.sh/capacity-type" # If not included, the webhook for the AWS cloud provider will default to on-demand
      operator: In
      values: ["spot"]
  providerRef:
    name: karpenter-provider
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: karpenter-provider
spec:
  subnetSelector:
    team: icmc
  launchTemplate: eks-8ec76ec3-44ba-70b3-6a38-31f61f52d5a1
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: high-priority
value: 1000000
globalDefault: false
description: "This priority class should be used for high priority service pods only."